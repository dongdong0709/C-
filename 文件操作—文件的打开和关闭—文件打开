//#include <stdio.h>
//FILE* fopen(const char* filename, const char* mode);
////功能：打开文件
////参数：
////		filename：需要打开的文件名，根据需要加上路径
////		mode：打开文件的模式设置
////返回值：
////		成功：文件指针
////		失败：NULL

////第一种参数的几种形式
//#include<stdio.h>
//int main() {
//	FILE* fp_passwd = NULL;
//
//	//相对路径：
//	//打开当前目录passdw文件：源文件(源程序)所在目录
//	FILE* fp_passwd = fopen("passwd.txt", "r");
//
//	//打开当前目录(test)下passwd.txt文件
//	fp_passwd = fopen(". / test / passwd.txt", "r");
//
//	//打开当前目录上一级目录（相对当前目录）passwd.txt文件
//	fp_passwd = fopen(".. / passwd.txt", "r");
//
//	//绝对路径：
//	//打开C盘test目录下一个叫passwd.txt文件
//	fp_passwd = fopen("c:/test/passwd.txt", "r");
//}
#include<stdio.h>
int main(void)
{
	FILE* fp = NULL;

	// "\\"这样的路径形式，只能在windows使用
	// "/"这样的路径形式，windows和linux平台下都可用，建议使用这种
	// 路径可以是相对路径，也可是绝对路径
	fp = fopen("../test", "w");
	//fp = fopen("..\\test", "w");

	if (fp == NULL) //返回空，说明打开失败
	{
		//perror()是标准出错打印函数，能打印调用库函数出错原因
		perror("open");
		return -1;
	}

	return 0;
}
