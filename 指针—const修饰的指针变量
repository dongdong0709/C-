//进阶版

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void)
{
	//const修饰一个变量为只读
	const int a = 10;
	//a = 100; //err

	//指针变量， 指针指向的内存， 2个不同概念
	char buf[] = "aklgjdlsgjlkds";

	//从左往右看，跳过类型，看修饰哪个字符
	//如果是*， 说明指针指向的内存不能改变
	//如果是指针变量，说明指针的指向不能改变，指针的值不能修改
	const char* p = buf;
	// 等价于上面 char const *p1 = buf;
	//p[1] = '2'; //err——值不能动，指向可以动
	p = "agdlsjaglkdsajgl"; //ok——这个的意思是指针P指向了一个新的字符串

	char* const p2 = buf;
	p2[1] = '3';
	//p2 = "salkjgldsjaglk"; //err——指针的指向不可以改变

	//p3为只读，指向不能变，指向的内存也不能变
	const char* const p3 = buf;

	return 0;
}

//#include<stdio.h>
//int main() {
//	int a = 100;
//	int b = 200;
//
////指向常量的指针(常量指针）
//	//修饰*，指针指向内存区域的值不能修改，指针指向可以变
//	const int* p1 = &a; //等价于int const *p1 = &a;-----都叫常量指针
//	//*p1 = 111; //err——指针指向的值不能更改
//	p1 = &b; //ok——指针的指向可以修改
//
////指针常量
//	//修饰p1，指针指向不能变，指针指向的内存可以修改
//	int* const p2 = &a;
//	//p2 = &b; //err
//	*p2 = 222; //ok
//}
